<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ReplState" timestamp="1440043851801">{:repl-history {:ide [], :local [], :remote [&quot;(js/alert \&quot;Test\&quot;)&quot; &quot;(use 'figwheel-sidecar.repl-api)&quot; &quot;(cljs-repl)&quot; &quot;(js/alert \&quot;Test this\&quot;)&quot; &quot;(om/transact! assoc :text \&quot;Test\&quot;)&quot; &quot;@app-state&quot; &quot;(use `chestnut-test.core)&quot; &quot;(app-state)&quot; &quot;(in-ns `chestnut-test.core)&quot; &quot;(om/transact! assoc :text \&quot;UPdaated\&quot;)&quot; &quot;(om/transact! app-state assoc :text \&quot;UPdaated\&quot;)&quot; &quot;(om/transact! app-state assoc :text #(\&quot;Updated\&quot;))&quot; &quot;(om/transact! app-state :text #(\&quot;Updated\&quot;))&quot; &quot;(om/transact! app-state :text (fn [_] \&quot;Updated\&quot;))&quot; &quot;(swap! app-state assoc :text \&quot;Update\&quot;)&quot; &quot;(defn inc-this []\n  (let [cnt 1] (js/setInterval (fn [prev]\n                                 (swap! app-state assoc :text (js/String cnt)) 100))))&quot; &quot;(defn inc-this []\n  (let [cnt 1] (js/setInterval (fn [prev]\n                                 (swap! app-state assoc :text (js/String (inc cnt))) 100))))&quot; &quot;(inc-this)&quot; &quot;(defn inc-this []\n  (binding [cnt 1] (js/setInterval (fn [prev]\n                                 (swap! app-state assoc :text (js/String (set! cnt (inc cnt)))) 100))))&quot; &quot;(defn cntnums (range 1000))&quot; &quot;(def cntnums (range 1000))&quot; &quot;(inc (first cntnums))&quot; &quot;(next cntnums)&quot; &quot;(head cntnums)&quot;]}}</component>
</project>